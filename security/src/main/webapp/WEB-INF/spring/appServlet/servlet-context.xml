<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- Base package로부터 @Controller만 읽어들여 Web Application Context영역에 생성합니다. -->
	<context:component-scan base-package="com.suph.security" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- @RequestMapping을 연결합니다. -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- <mvc:annotation-driven /> 사용시 HttpMessageConverter를 기본적으로 등록 -->
	<!-- Default HttpMessageConverter로 등록되는 여러 종류의 컨버터 중에는 MappingJackson2HttpMessageConverter가 포함 -->
	<!-- 다만 MappingJackson2HttpMessageConverter는 classpath에 Jackson 라이브러리가 존재할 경우에만 자동 생성 -->
	<!-- 따라서 Spring의 Default 전략을 사용하기로 했다면 MessageConverter를 따로 등록하지 않아도 @ResponseBody 사용 가능 -->
	<!-- 참고 주소: http://seongilman.tistory.com/117 -->
	<!-- <beans:bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" /> -->
</beans:beans>
