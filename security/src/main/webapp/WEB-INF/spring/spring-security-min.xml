<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			    http://www.springframework.org/schema/beans/spring-beans.xsd
			    http://www.springframework.org/schema/security
			    http://www.springframework.org/schema/security/spring-security.xsd">
	
	<http pattern="/**/*.js" security="none" />
	<http pattern="/**/*.css" security="none" />
	<http pattern="/images/*" security="none" />
	
	
	
	<!--====================================== 로그인 관련 설정들 =====================================-->
	<beans:bean id="CustomAuthenticationSuccessHandler" class="com.suph.security.CustomAuthenticationSuccessHandler">
		<beans:property name="targetUrlParameter" value="loginRedirect"/>
		<beans:property name="defaultUrl" value="/main"/>
		<beans:property name="useReferer" value="false"/>
	</beans:bean>
	
	<beans:bean id="CustomAuthenticationFailureHandler" class="com.suph.security.CustomAuthenticationFailureHandler">
		<beans:property name="loginidname" value="loginid"/>
		<beans:property name="loginpasswdname" value="loginpw"/>
		<beans:property name="loginredirectname" value="loginRedirect"/>
		<beans:property name="exceptionmsgname" value="securityexceptionmsg"/>
		<beans:property name="defaultFailureUrl" value="/login.do?fail=true"/>
	</beans:bean>
	
	<beans:bean id="accessDenied" class="com.suph.security.CustomAccessDeniedHandler">
		<beans:property name="errorPage" value="/access_denied"/>
	</beans:bean>
	
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/**" requires-channel="https"/>
		<port-mappings>
			<port-mapping http="8090" https="8443"/>
		</port-mappings>
		
		<form-login
			username-parameter="loginid"
			password-parameter="loginpwd"
			login-page="/login"
			default-target-url="/main"
			authentication-success-handler-ref="CustomAuthenticationSuccessHandler"
			authentication-failure-handler-ref="CustomAuthenticationFailureHandler"
		/>
		
		<logout logout-success-url="/main" delete-cookies="JSESSIONID"/>
		<anonymous granted-authority="ANONYMOUS"/>
		<custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="filterSecurityInterceptor"/>
		<access-denied-handler ref="accessDenied"/>
	</http>
	
	
	
	<!--====================================== 권한 필터(권한을 총괄하는 필터) - 인증 정보/ 권한 정보/ 판단 주체로 구성 ======================================-->
	<beans:bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<beans:property name="authenticationManager" ref="org.springframework.security.authenticationManager"/>
		<beans:property name="securityMetadataSource" ref="reloadableFilterInvocationSecurityMetadataSource"/>
		<beans:property name="accessDecisionManager" ref="accessDecisionManager"/>
	</beans:bean>
	
	
	
	<!--====================================== 인증 정보(접근하려는 자가 가지고 있는 권한) ======================================-->
	<beans:bean id="loginService" class="com.suph.security.LoginServiceImpl"/>
	<beans:bean id="bcryptPasswordEncoder" class="com.suph.security.CustomBCryptPasswordEncoder"/>
	
	<authentication-manager>
		<authentication-provider user-service-ref="loginService">
			<password-encoder ref="bcryptPasswordEncoder"/>
		</authentication-provider>
	</authentication-manager>
	
	
	
	<!--====================================== 대상 정보(대상 접근에 필요한 권한) ======================================-->
	<beans:bean id="securedObjectService" class="com.suph.security.SecuredObjectServiceImpl">
		<beans:property name="securedObjectDAO" ref="securedObjectDAO"/>
	</beans:bean>
	
	<beans:bean id="requestMap" class="com.suph.security.UrlResourcesMapFactoryBean" init-method="init">
		<beans:property name="securedObjectService" ref="securedObjectService"/>
	</beans:bean>
	
	<beans:bean id="reloadableFilterInvocationSecurityMetadataSource" class="com.suph.security.ReloadableFilterInvocationSecurityMetadataSource">
		<beans:constructor-arg ref="requestMap"/>
		<beans:property name="securedObjectService" ref="securedObjectService"/>
	</beans:bean>
	
	
	
	<!--====================================== 판단 주체(허가하질 말지 판단) ======================================-->
	<beans:bean id="accessDecisionManager" class="com.suph.security.CustomAffirmativeBased">
		<beans:constructor-arg>
			<beans:list>
				<beans:bean class="com.suph.security.CustomRoleVoter">
					<beans:property name="rolePrefix" value=""/>
				</beans:bean>
			</beans:list>
		</beans:constructor-arg>
		
		<beans:property name="allowIfAllAbstainDecisions" value="false"/>
	</beans:bean>
</beans:beans>

